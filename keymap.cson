# Copyright (c) 2017 <YOUR NAME>
#
# GNU GENERAL PUBLIC LICENSE
#    Version 3, 29 June 2007
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# My Atom keymap
'atom-workspace':
  # Suggested default map for paner
  'ctrl-w x': 'paner:swap-pane'
  'ctrl-w X': 'paner:send-item'
  'ctrl-w K': 'paner:very-top'
  'ctrl-w J': 'paner:very-bottom'
  'ctrl-w H': 'paner:very-left'
  'ctrl-w L': 'paner:very-right'
  'ctrl-w h': 'paner:split-bottom'
  'ctrl-w v': 'paner:split-left'
  # Switch panes globally
  'ctrl-w w': 'choose-pane:start'
  'shift-cmd-1':     'run-command:run'
  'shift-alt-x':     'run-command:toggle-panel'
  'shift-ctrl-alt-1':'run-command:kill-last-command'
  'shift-alt-1':     'run-command:re-run-last-command'

'atom-workspace atom-text-editor':
  "ctrl-q": "atomic-emacs:kill-region"
  "ctrl-w": "atomic-emacs:backward-kill-word"

# Global editor bindings
'atom-workspace atom-text-editor:not(.mini)':
  # Undefine a binding from jumpy, while retaining all its others
  'shift-enter': 'unset!'
  # Region expansion
  'alt-up': 'expand-region:expand'
  'alt-down': 'expand-region:shrink'
  # Cursor position history
  'ctrl-i':     'cursor-history:next'
  'ctrl-o':     'cursor-history:prev'
  'ctrl-cmd-i': 'cursor-history:next-within-editor'
  'ctrl-cmd-o': 'cursor-history:prev-within-editor'

# Specific selectors
'.platform-darwin .platformio-ide-terminal .terminal':
  'cmd-c': 'platformio-ide-terminal:copy'
  'cmd-v': 'platformio-ide-terminal:paste'
'.platform-linux .platformio-ide-terminal .terminal, .platform-win32 .platformio-ide-terminal .terminal':
  'alt-v': 'platformio-ide-terminal:paste'
  'alt-c': 'platformio-ide-terminal:copy'
".build":
  "escape": "build:stop"
".build-confirm":
  "enter": "build:confirm",
  "escape": "build:no-confirm"

# Regular normal mode bindings
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  # Because I can't stop typing this
  ': w': 'core:save'
  # Leader bindings in normal mode
  'space space': 'command-palette:toggle'
  'space b b': 'build:trigger'
  'space b p': 'build:toggle-panel'
  'space b e': 'build:error-match'
  'space b E': 'build:error-match-first'
  'space b t': 'build:select-active-target'
  'space c space': 'editor:toggle-line-comments'
  'space e h': 'linter:previous-error'
  'space e l': 'linter:next-error'
  'space d d': 'split-diff:toggle'
  'space d h': 'split-diff:copy-to-left'
  'space d j': 'split-diff:next-diff'
  'space d k': 'split-diff:prev-diff'
  'space d l': 'split-diff:copy-to-right'
  'space g A': 'git-plus:add-all-commit-and-push'
  'space g a': 'git-plus:add'
  'space g C': 'git-plus:add-and-commit'
  'space g c': 'git-plus:commit'
  'space g l': 'git-log:show'
  'space g M': 'merge-conflicts:detect'
  'space g m': 'git-plus:menu'
  'space g p': 'git-plus:push'
  'space g s': 'git-plus:status'
  'space g t': 'git-time-machine:toggle'
  'space h d': 'dash:shortcut'
  'space h D': 'dash:shortcut-alt'
  'space j': 'jumpy:toggle'
  'space l': 'hyperclick:confirm-cursor'
  'space p': 'application:reopen-project'
  'space R': 'window:reload'
  'space T': 'tree-view:toggle'
  'space t': 'fuzzy-finder:toggle-file-finder'
  'space w Q': 'window:close'
  'space w q': 'core:close'
  'space w w': 'choose-pane:start'
  'space w /': 'paner:split-right'
  'space w -': 'paner:split-bottom'
  'space `': 'platformio-ide-terminal:toggle'

# Special normal mode bindings
# TODO: Add normal mode bindings for `.conflicted` selector from merge-conflicts
# Markdown
'atom-text-editor[data-grammar="text md"].vim-mode-plus:not(.insert-mode)':
  ', x': 'markdown:toggle-task'
# Typescript
'atom-text-editor:not([mini])[data-grammar^="source ts"].vim-mode-plus:not(.insert-mode)':
  ', b': 'typescript:build'
  ', c': 'typescript:context-actions'
  ', d': 'typescript:go-to-declaration'
  ', f': 'typescript:format-code'
  ', h': 'typescript:go-to-previous'
  ', l': 'typescript:go-to-next'
  ', o': 'typescript:output-toggle'
  ', q': 'typescript:quick-fix'
  ', r': 'typescript:rename-refactor'
  ', s': 'typescript:sync'
  ', u': 'typescript:find-references'
# Rust
'atom-text-editor:not([mini])[data-grammar~="rust"].vim-mode-plus:not(.insert-mode)':
  ', d': 'racer:find-definition'
# Haskell
'atom-text-editor:not([mini])[data-grammar~="haskell"].vim-mode-plus:not(.insert-mode)':
  ', d': 'haskell-ghc-mod:go-to-declaration'
  ', f': 'ide-haskell:prettify-file'
  ', i': 'haskell-ghc-mod:insert-import'
  ', h': 'ide-haskell:prev-error'
  ', l': 'ide-haskell:next-error'
  ', O': 'ide-haskell:toggle-output'
  ', S': 'haskell-ghc-mod:case-split'
  ', s': 'haskell-ghc-mod:sig-fill'
  ', t': 'haskell-ghc-mod:show-type-and-info'

# Regular insert mode bindings
'atom-text-editor.vim-mode-plus.insert-mode':
  'f d': 'vim-mode-plus:activate-normal-mode'

# Special insert mode bindings
# Markdown
'atom-text-editor[data-grammar="text md"].vim-mode-plus.insert-mode':
  'tab': 'markdown:indent-list-item'
  'shift-tab': 'markdown:outdent-list-item'
  '_': 'markdown:emphasis'
  '*': 'markdown:strong-emphasis'
  '~': 'markdown:strike-through'
  '@': 'markdown:link'
  '!': 'markdown:image'

# Default Keymaps for Markdown Writer
# https://atom.io/packages/markdown-writer
#
# Wiki: https://github.com/zhuochun/md-writer/wiki/Settings-for-Keymaps
#
".platform-darwin atom-text-editor:not([mini])":
  "shift-cmd-K": "markdown-writer:insert-link"
  "shift-cmd-I": "markdown-writer:insert-image"
  "cmd-i":       "markdown-writer:toggle-italic-text"
  "cmd-b":       "markdown-writer:toggle-bold-text"
  "cmd-'":       "markdown-writer:toggle-code-text"
  "cmd-k":       "markdown-writer:toggle-keystroke-text"
  "cmd-h":       "markdown-writer:toggle-strikethrough-text"
  'cmd->':       "markdown-writer:toggle-blockquote"
  'cmd-"':       "markdown-writer:toggle-codeblock-text"
  "ctrl-alt-1":  "markdown-writer:toggle-h1"
  "ctrl-alt-2":  "markdown-writer:toggle-h2"
  "ctrl-alt-3":  "markdown-writer:toggle-h3"
  "ctrl-alt-4":  "markdown-writer:toggle-h4"
  "ctrl-alt-5":  "markdown-writer:toggle-h5"
  "shift-cmd-O": "markdown-writer:toggle-ol"
  "shift-cmd-U": "markdown-writer:toggle-ul"
  "cmd-j cmd-p": "markdown-writer:jump-to-previous-heading"
  "cmd-j cmd-n": "markdown-writer:jump-to-next-heading"
  "cmd-j cmd-d": "markdown-writer:jump-to-reference-definition"
  "cmd-j cmd-t": "markdown-writer:jump-to-next-table-cell"

'atom-text-editor':
  'cmd-ctrl-n': 'git-diff:move-to-next-diff'
  'cmd-ctrl-p': 'git-diff:move-to-previous-diff'
  'ctrl-y': 'atomic-emacs:yank'

'body':
  'ctrl-tab ^ctrl': 'unset!'
  'ctrl-tab': 'pane:show-next-item'
  'ctrl-shift-tab ^ctrl': 'unset!'
  'ctrl-shift-tab': 'pane:show-previous-item'
